

Step 1. Receive API request in an endpoint with a parameter, which is used to pass the data towards the correct provider class
        * New class for each payment provider, separate from the business logic, 
        * Find out what data gets sent by payment provider in request body for each scenario
            > Apple responsebody {
                                    auto_renew_adam_id
                                    auto_renew_product_id
                                    auto_renew_status 
                                    auto_renew_status_change_date
                                    pending_renewal_info [
                                        expiration_intent {
                                            Possible Values
                                            1 - The customer voluntarily canceled their subscription.
                                            2 - Billing error; for example, the customer's payment information was no longer valid.
                                            3 - The customer did not agree to a recent price increase.
                                            4 - The product was not available for purchase at the time of renewal.
                                            5 - Unknown error.
                                        }
                                    ]
                                    notification_type {
                                        CANCEL
                                        DID_FAIL_TO_RENEW - Subscription failed to renew because of a billing issue
                                        DID_RENEW - Subscription succesfully auto-renewed
                                        INITIAL_BUY - Customer completed an initial purchase of a subscription
                                    }
                                    unified_receipt.Latest_receipt_info {
                                        expires_date
                                    }
                                }


Step 2. Pass the request to appropriate class that handles the specific case (initial buy, did renew, etc)
        * 1 main endpoint passes the request to 1 out of 4 classes that handle those classes

Step 3. Handle business logic for that specific case by amending, adding or deleting users data, change subscription status.
        * Database must consist of tbl_subscriptions(status, expiry_date, original_transaction_id (user), product_id ), tbl_users, tbl_transactions (transaction_id, original_transaction_id(user), and product_id ) tables
        * Subscription, Transaction, Users models

Step 4. Refactor and abstract Step 1-3 to make it usable across multiple payment providers